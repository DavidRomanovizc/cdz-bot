import asyncio
from typing import Union

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from glQiwiApi import types as qiwi_types

from keyboards.inline.btn_menu import main_menu
from keyboards.inline.payment_methods import pay_Qiwi
from loader import wallet, dp, db, bot


async def create_payment(amount: Union[float, int] = 1) -> qiwi_types.Bill:
    async with wallet:
        return await wallet.create_p2p_bill(amount=amount)


@dp.callback_query_handler(text="pay_balance")
async def get_payment(call: CallbackQuery):
    await call.answer(cache_time=60)
    await call.message.edit_text("***üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:***\n"
                                 "‚îú–ù–∞–≤—Å–µ–≥–¥–∞ [[59‚ÇΩ]]\n"
                                 "‚îú–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ü–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \n***‚îúüîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—ã***\n"
                                 "‚îú–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç Qiwi –∏–ª–∏ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–ø–ª–∞—Ç–∏—Ç—å —Å –ø–æ–º–æ—â—å—é ‚îú–∫–∏–≤–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ"
                                 "–Ω–∞ –∫–Ω–æ–ø–∫—É\n"
                                 "‚îúüÜò –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                                 reply_markup=pay_Qiwi)


@dp.callback_query_handler(text="check_price")
async def check_price(call: CallbackQuery):
    await bot.answer_callback_query(call.id, text="‚úîÔ∏è –¶–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")


@dp.callback_query_handler(text='pay_qiwi')
async def payment(message: Union[CallbackQuery, types.Message], state: FSMContext):
    await message.answer(cache_time=60)
    user = await db.select_user(telegram_id=message.from_user.id)
    try:
        is_premium = user.get('is_premium')
        print(is_premium)
    except AttributeError:
        is_premium = False
    bill = await create_payment()
    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å', url=bill.pay_url)
    keyboard.add(btn1)
    btn2 = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data='check_payment')
    keyboard.add(btn2)
    btn3 = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel_payment')
    keyboard.add(btn3)
    if is_premium is True:
        await bot.send_message(message.from_user.id, text=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –î–æ—Å—Ç—É–ø —É–∂–µ –∫—É–ø–ª–µ–Ω :)")
        await asyncio.sleep(1)
        await bot.send_message(message.from_user.id, text=f"üëë –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, {message.from_user.full_name}!\n\n"
                                                          f"üñ•Ô∏è –≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è ***–æ–Ω–ª–∞–π–Ω —Ç–µ—Å—Ç–æ–≤*** –Ω–∞ "
                                                          f"–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –†–§\n\n "
                                                          f"–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç —Ä–µ—à–∞—Ç—å —Ç–µ—Å—Ç—ã, –≥–¥–µ –µ—Å—Ç—å ***–∑–∞–¥–∞–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ "
                                                          f"—Ç–∏–ø–∞***\n",
                               reply_markup=main_menu)

    else:
        await bot.send_message(message.from_user.id, text=f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ ***–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É***\n"
                                                          f"–ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–∏–∂–µ, "
                                                          f"–Ω–∞–ø–∏—à–∏ —Å—é–¥–∞: @DRomanovizc",
                               reply_markup=keyboard)
        await state.set_state("payment")
        await state.update_data(bill=bill)


@dp.callback_query_handler(state="payment", text="check_payment")
async def successful_payment(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data='check_payment')
    keyboard.add(btn1)
    keyboard1 = types.ReplyKeyboardMarkup()
    async with state.proxy() as data:
        bill: qiwi_types.Bill = data.get("bill")
    status = await bill.check()
    if status:
        await call.message.edit_text("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        await db.update_premiun(telegram_id=call.from_user.id, is_premium=True)
        await state.finish()

    else:
        await call.message.answer("–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç 10, –∞ –∑–∞—Ç–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
                                  reply_markup=keyboard)


@dp.callback_query_handler(state='payment', text='cancel_payment')
async def cancel_payment(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    await call.message.reply(f'–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É :(\n', reply_markup=main_menu)
    await state.reset_state()
